{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","memo","todos","selectedTodoId","onSelectedTodoId","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","query","filter","onSearch","onSelectStatus","status","value","onChange","event","target","placeholder","style","pointerEvents","length","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","useState","user","setUser","useEffect","userId","handleCloseButton","useCallback","href","email","name","App","setTodos","setSelectedStatus","searchQuery","setSearchQuery","setSelectedTodoId","visibleTodos","useMemo","isQueryMatch","toLowerCase","includes","trim","selectedFilterStatus","selectedTodo","find","closeSelectedTodo","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82b769e5.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number,\n  onSelectedTodoId: (todoId: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = memo(({\n  todos,\n  selectedTodoId,\n  onSelectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={\n            `has-background${\n              selectedTodoId === todo.id\n                ? '-info-light'\n                : ''\n            }`\n          }\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectedTodoId(todo.id)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={cn(\n                    'far',\n                    { 'fa-eye': selectedTodoId !== todo.id },\n                    { 'fa-eye-slash': selectedTodoId === todo.id },\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n));\n","import React, { memo } from 'react';\n\ntype Props = {\n  query: string,\n  filter: (value: string) => void,\n  onSearch: () => void,\n  onSelectStatus: (value: string) => void,\n  status: string,\n};\n\nexport const TodoFilter: React.FC<Props> = memo(({\n  query,\n  filter,\n  onSearch,\n  onSelectStatus,\n  status,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={status}\n          onChange={(event) => onSelectStatus(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => filter(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query.length > 0 && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onSearch}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n));\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { memo } from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import React, {\n  useEffect,\n  useState,\n  memo,\n  useCallback,\n} from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  onClose: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = memo(({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  const handleCloseButton = useCallback(\n    () => onClose(), [],\n  );\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      { user ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseButton}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`\"mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n});\n","/* eslint-disable max-len */\nimport React, {\n  useEffect,\n  useState,\n  useCallback,\n  useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [status, setSelectedStatus] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n\n  useEffect(() => {\n    getTodos().then(todo => setTodos(todo));\n  }, []);\n\n  const visibleTodos = useMemo(() => todos.filter(todo => {\n    const isQueryMatch = todo.title.toLowerCase().includes(searchQuery.toLowerCase().trim());\n    let selectedFilterStatus = true;\n\n    switch (status) {\n      case 'active':\n        selectedFilterStatus = !todo.completed;\n        break;\n\n      case 'completed':\n        selectedFilterStatus = todo.completed;\n        break;\n\n      default:\n        selectedFilterStatus = true;\n    }\n\n    return isQueryMatch && selectedFilterStatus;\n  }), [todos, status, searchQuery]);\n\n  const selectTodoId = (todoId: number) => {\n    setSelectedTodoId(todoId);\n  };\n\n  const selectedTodo = useMemo(() => visibleTodos.find(todo => (\n    todo.id === selectedTodoId\n  )), [selectedTodoId, visibleTodos]);\n\n  const closeSelectedTodo = useCallback(() => {\n    setSelectedTodoId(0);\n  }, []);\n\n  const filterByQuery = (value: string) => {\n    setSearchQuery(value);\n  };\n\n  const clearQuery = () => {\n    setSearchQuery('');\n  };\n\n  const selectStatus = (value: string) => {\n    setSelectedStatus(value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={searchQuery}\n                filter={filterByQuery}\n                onSearch={clearQuery}\n                onSelectStatus={selectStatus}\n                status={status}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={selectedTodoId}\n                    onSelectedTodoId={selectTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          onClose={closeSelectedTodo}\n          todo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}